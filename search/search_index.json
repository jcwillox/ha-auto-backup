{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>Auto Backup is an Improved Backup Service for Home Assistant that can Automatically Remove Backups and Supports Generational Backup Schemes.</p> <p></p> <p>While Home Assistant does provide built-in services for creating backups, they do not provide the ability to exclude items from a backup, or advanced retention settings, this custom integration aims to fix that. See the FAQ for more information on differences.</p>"},{"location":"#features","title":"Features","text":"<ul> <li> Provides more advanced and configurable service calls.</li> <li> Exclude addons/folders from a backup.</li> <li> Automatically delete backups after an individually specified amount of time.</li> <li> Backup to custom locations such as network storage.</li> <li> Download backups to a specified directory after completion (for example a usb drive).</li> <li> Allows the use of addon names instead of slugs.</li> <li> Provides a sensor to monitor the status of your backups.</li> <li> Creates events for when backups are started/created/failed/deleted.</li> <li> Supports generational backup schemes.</li> <li> Supports unencrypted and encrypted backups, including the default encryption added in 2025.1.</li> </ul>"},{"location":"#blueprints","title":"Blueprints","text":"Blueprint: Automatic Backups <p>Create backups each day and keep them for a configurable amount of time, backups are stored less frequently the older they are.</p> <p></p> Blueprint: Notifications <p>Send notifications based on events created by the Auto Backup integration, such as when a backup fails.</p> <p></p>"},{"location":"#configuration","title":"Configuration","text":"<p>After installing Auto Backup via HACS, it can then be setup via the UI, by going to Configuration \u2192 Devices &amp; Services \u2192 Add Integration \u2192 Auto Backup or by clicking the button below.</p> <p></p>"},{"location":"#options","title":"Options","text":"Option Description Automatically delete expired backups This option will automatically purge any expired backups when creating a new backup. Backup Timeout You can increase this value if you get timeout errors when creating a backup. This can happen with very large backups. Increasing this might make Auto Backup less reliable at monitoring backups to delete."},{"location":"#videos","title":"Videos","text":"<p>This was created by mostlychris not me, but it's a good video, so I thought I'd include it here in case it helps anyone get started.</p> <p></p>"},{"location":"advanced-examples/","title":"Advanced Examples","text":""},{"location":"advanced-examples/#generational-backups","title":"Generational Backups","text":"Blueprint <p>Create backups each day and keep them for a configurable amount of time, backups are stored less frequently the older they are.</p> <p></p>"},{"location":"advanced-examples/#preface","title":"Preface","text":"<p>Generational backups  allow you to store backups over a long period of time while still having frequent enough backups to be useful for recovery. This is done by reducing the frequency of backups as they get older. </p> <p>Personally I take a backup of the Home Assistant configuration every 3 hours for the first 2 days, then full backups each day for a week, and finally each week for a month.</p> <p>For example, lets say my database has corrupted and I want to restore it.</p> <p>If it has been less than 48 hours since it corrupted then I can restore to the exact point before it corrupted with an inaccuracy of at most 3 hours (if you're monitoring trends you don't want to lose hours worth of data, so an average accuracy of 1.5 is pretty good),</p> <p>If 48 hours have passed then I can restore to any point with a maximum inaccuracy of 1 day (average accuracy of 12 hours) over the past 7 days (excluding the two where the db was corrupted).</p> <p>Over a week I can restore to any point \u00b11 week over the past 3 weeks, while \u00b11 week isn't very useful for restoring a database, it can be useful for subtle thing you don't notice, like if you accidentally deleted something.</p> <p>This is substantially more efficient than storing a backup every 3 hours for a month, and while you lose some accuracy as the backups get older, most failures (if they even occur) will be noticed within 48 hours,</p> <p>Also, most things other than your database don't change that often so a 4-week-old backup of your home assistant config may be the same as 1 day old backup. Also in my case the 3 hourly backup only backs up the important files to save on storage, whereas my daily/weekly backups are full backups.</p> <p>Of course, you can tweak these values to your liking, or even add a month/yearly backup schedule .</p>"},{"location":"advanced-examples/#automations","title":"Automations","text":"Partial backup every 3 hours<pre><code>- alias: \"AutoBackup: Hourly Backup\"\n  trigger: # (1)\n    platform: time_pattern\n    hours: \"/3\"\n  action:\n    # partial backup to save storage\n    service: auto_backup.backup_partial \n    data:\n      name: \"AutoBackup: {{ now().strftime('%a, %-I:%M %p (%d/%m/%Y)') }}\"\n      addons:\n        - core_mariadb\n        - core_mosquitto\n      folders:\n        - homeassistant\n        - share\n        - ssl\n      keep_days: 2\n</code></pre> <ol> <li>Automation triggers on every 3rd hour.</li> </ol> Full backup every day except Mondays<pre><code>- alias: \"AutoBackup: Daily Backup\"\n  trigger:\n    platform: time\n    at: \"02:30:00\"\n  condition:\n    condition: time\n    weekday:\n      - tue\n      - wed\n      - thu\n      - fri\n      - sat\n      - sun\n  action:\n    service: auto_backup.backup_full\n    data:\n      name: \"DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n      keep_days: 7\n</code></pre> Full backup every Monday<pre><code>- alias: \"AutoBackup: Weekly Backup\"\n  trigger:\n    platform: time\n    at: \"02:30:00\"\n  condition:\n    condition: time\n    weekday:\n      - mon\n  action:\n    service: auto_backup.backup_full\n    data:\n      name: \"WeeklyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n      # store backup for a month\n      # i.e. backup each week and store for 4 weeks\n      keep_days: 28\n</code></pre> Full backup on the 1st of every month<pre><code>alias: \"AutoBackup: Monthly Backup\"\ntrigger:\n  # Choose a different time then your other automations\n  # to ensure that two are not running at once\n  - platform: time\n    at: \"01:00:00\"\ncondition:\n  - condition: template\n    value_template: \"{{ now().day == 1 }}\"\naction:\n  - service: auto_backup.backup_full\n    metadata: {}\n    data:\n      name: \"MonthlyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n      # store backup for a year\n      # i.e. backup on the 1st, store for 12 months\n      keep_days: 365\n</code></pre> Unified auto backup that does Daily, Weekly and Monthly in a single automation (version 2024.1 or newer required)<pre><code>alias: AutoBackup\ndescription: Unified Auto Backups\ntrigger:\n  - platform: time\n    at: \"02:30:00\"\ncondition: []\naction:\n  - choose:\n      - conditions:\n          - condition: template\n            value_template: \"{{ now().day == 1 }}\"\n        sequence:\n          - service: auto_backup.backup\n            data:\n              keep_days: 365\n              name: \"MonthlyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n      - conditions:\n          - condition: time\n            weekday:\n              - mon\n        sequence:\n          - service: auto_backup.backup\n            data:\n              keep_days: 28\n              name: \"WeeklyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n      - conditions:\n          - condition: time\n            weekday:\n              - sun\n              - tue\n              - wed\n              - thu\n              - fri\n              - sat\n        sequence:\n          - service: auto_backup.backup\n            data:\n              keep_days: 7\n              name: \"DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\nmode: single\n</code></pre>"},{"location":"events/","title":"Events","text":"Event Event Data <code>auto_backup.backup_start</code> <code>{\"name\": \"NAME\"}</code> <code>auto_backup.backup_successful</code> <code>{\"name\": \"NAME\", \"slug\": \"SLUG\"}</code> <code>auto_backup.backup_failed</code> <code>{\"name\": \"NAME\", \"error\": \"ERROR\"}</code> <code>auto_backup.purged_backups</code> <code>{\"backups\": [\"SLUG\"]}</code>"},{"location":"events/#example-automation-using-events","title":"Example Automation Using Events","text":"Blueprint <p>Send notifications based on events created by the Auto Backup integration, such as when a backup fails.</p> <p></p> Notify on Backup Failure<pre><code>- alias: \"Notify Backup Failure\"\n  trigger:\n    platform: event\n    event_type: auto_backup.backup_failed # (1)\n  action:\n    service: persistent_notification.create # (2)\n    data:\n      title: \"Backup Failed.\"\n      message: |-\n        Name: {{ trigger.event.data.name }}\n        Error: {{ trigger.event.data.error }}\n</code></pre> <ol> <li>We listen for the <code>auto_backup.backup_failed</code> event.</li> <li>Create a persistent notification on failure with the backups name and the error.</li> </ol>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#send-a-notification-on-backup-failure","title":"Send a notification on backup failure","text":"Blueprint <p>Send notifications based on events created by the Auto Backup integration, such as when a backup fails.</p> <p></p> Notify on Backup Failure<pre><code>- alias: \"Notify Backup Failure\"\n  trigger:\n    platform: event\n    event_type: auto_backup.backup_failed # (1)\n  action:\n    service: persistent_notification.create # (2)\n    data:\n      title: \"Backup Failed.\"\n      message: |-\n        Name: {{ trigger.event.data.name }}\n        Error: {{ trigger.event.data.error }}\n</code></pre> <ol> <li>We listen for the <code>auto_backup.backup_failed</code> event.</li> <li>Create a persistent notification on failure with the backups name and the error.</li> </ol>"},{"location":"examples/#scheduling-automatic-backups","title":"Scheduling automatic backups","text":"Blueprint <p>Create backups each day and keep them for a configurable amount of time, backups are stored less frequently the older they are.</p> <p></p> <p>Perform a partial backup of the Home Assistant config folder, mariadb and mosquitto every 3 hours, and store each backup for 2 days.</p> Automatic Backups<pre><code>- alias: Automatic Backup\n  trigger: # (1)\n    - platform: time_pattern\n      hours: \"/3\"\n  action:\n    - service: auto_backup.backup_partial\n      data:\n        name: \"AutoBackup: {{ now().strftime('%a, %-I:%M %p (%d/%m/%Y)') }}\"\n        addons:\n          - almond\n          - Glances\n          - mosquitto broker\n          - core_mariadb\n        folders:\n          - homeassistant\n          - Share\n          - ssl\n          - Local add-ons\n        keep_days: 2\n</code></pre> <ol> <li>Automation triggers on every 3rd hour.</li> </ol>"},{"location":"examples/#excluding-addonsfolders-from-a-backup","title":"Excluding addons/folders from a backup","text":"Exclude from Backup<pre><code>- alias: Perform Daily Backup\n  trigger:\n    - platform: time\n      at: \"00:00:00\"\n  action:\n    - service: auto_backup.backup_full\n      data:\n        name: \"DailyBackup: {{ now().strftime('%A, %B %-d, %Y') }}\"\n        keep_days: 7\n        exclude:\n          addons:\n            - Portainer\n          folders:\n            - Local add-ons\n            - share\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#how-does-this-differ-from-the-automatic-backups-added-in-home-assistant-20251","title":"How does this differ from the automatic backups added in Home Assistant 2025.1?","text":"<p>The addition of configurable automatic backups in Home Assistant 2025.1 is a great addition, but it is not quite yet as powerful or customisable as Auto Backup and lacks some features that Auto Backup provides, including:</p> <ul> <li>Full control over when backups are taken and deleted, what's included, and retention.<ul> <li>This allows us to support generational backup schemes, which HA does not support. You would need the ability to set up multiple automatic backup configuration, currently you are limited to just one.</li> <li>Support for wildcard includes and excludes for addons and folders.</li> <li>Support for using addon names instead of slugs.</li> </ul> </li> <li>Support for unencrypted backups.<ul> <li>HA now has mandatory encryption, which is probably a good thing for the majority of users, but it has certain limitations, such as not being able to open backup archives and view individual files. HA doesn't provide a method to explore or decrypt backups without restoring them. So if you want to go back and look at your <code>configuration.yaml</code> file from a year ago it will be difficult. Additionally, encryption is only needed if you are uploading your backups directly to an insecure location.</li> </ul> </li> <li>Sensors for tracking the state of backups.</li> <li>Success and failure events for when backups are started/created/failed/deleted.<ul> <li>This also allows you to run actions after a backup is created.</li> </ul> </li> <li>Download a backup to a specified directory after completion (for example a usb drive).<ul> <li>This can partially be done with the custom locations feature, but some users have found cases where that does not work as it does not support local file paths and only support network storages currently.</li> </ul> </li> </ul>"},{"location":"home-assistant-core/","title":"Home Assistant Core","text":"<p>To use Auto Backup on Home Assistant Core you will need to have the <code>backup</code> integration loaded, if you are already using <code>default_config</code> (enabled by default) then this will already be loaded.</p> <p>Note</p> <p>The <code>addons</code> and <code>folders</code> options will have no effect for Home Assistant Core users, as addons and extra folders such as <code>ssl</code> and <code>share</code> only exist in Home Assistant OS and Supervised installations.</p>"},{"location":"home-assistant-supervised/","title":"Home Assistant Supervised","text":""},{"location":"home-assistant-supervised/#limitations","title":"Limitations","text":""},{"location":"home-assistant-supervised/#stability-timeouts","title":"Stability (Timeouts)","text":"<p>When using Home Assistant Supervised, Auto Backup must make a request to the Supervisor to create a backup and has to keep that request open until the backup completes, at which point the backups unique id (slug) is returned. This can create stability issues when backups take a long time to create, e.g. 20 minutes+, as the request may fail and Auto Backup will not know the id of the backup to monitor for completion or deletion. In this case, the backup will still be created.</p> <p>By default, Auto Backup will assume a backup failed if it takes longer than 20 minutes. You can increase this limit using the \"Backup Timeout\" option, but you may run into reliability issues.</p>"},{"location":"home-assistant-supervised/#include-exclude","title":"Include / Exclude","text":"<p>The scope of the <code>include</code> and <code>exclude</code> options are limited by what Home Assistant allows, you can only include or exclude addons and the base folders like <code>config</code>, <code>share</code>, <code>media</code>, but not subdirectories of them.</p>"},{"location":"sensors/","title":"Entities","text":"<p>Entities for monitoring and controlling the Auto Backup integration.</p> <p></p> Name Type Enabled by default Description Purge <code>button</code> \u2705 Purge expired backups ondemand, otherwise, they are purged automatically when creating a new backup Backup Status <code>binary_sensor</code> \u2705 Displays whether a backup operation is currently running Successful <code>binary_sensor</code> Whether the last backup succeeded or failed Last Failure <code>sensor</code> \u2705 Time of the last failed backup Last Success <code>sensor</code> \u2705 Time of the last successful backup Monitored backups <code>sensor</code> \u2705 How many backups have an expiry date and are being monitored to be purged. Purgeable backups <code>sensor</code> \u2705 The number of backups which have passed their expiry date and will be purged during the next purge operation Next Expiration <code>sensor</code> How long until the next non-expired backup will expire <p>Additional images</p> <p></p> <p></p> <p></p>"},{"location":"services/","title":"Services","text":"<p>Services are the core of Auto Backup, they are the only methods that cause Auto Backup to do anything.</p>"},{"location":"services/#auto_backupbackup","title":"<code>auto_backup.backup</code>","text":"<p>Create a full or partial backup.</p> <p>This is the primary method and includes the functionality of the <code>backup_full</code> and <code>backup_partial</code> services.</p> Parameter Description Type Example <code>name</code> Optional name, defaults to the current date and time. <code>string</code> <code>Automatic Backup {{ now().strftime('%Y-%m-%d') }}</code> <code>include_addons</code> List of addons to include in the backup (name or slug). Wildcards supported for slugs. <code>list</code> <code>[\"Almond\", \"glances\", \"core_mariadb\", \"core_*\"]</code> <code>include_folders</code> List of folders to include in the backup. <code>list</code> <code>[\"Local add-ons\", \"homeassistant\", \"share\"]</code> <code>exclude_addons</code> List of addons to exclude from the backup (name or slug). Wildcards supported for slugs. <code>list</code> <code>[\"Almond\", \"glances\", \"core_mariadb\", \"core_*\"]</code> <code>exclude_folders</code> List of folders to exclude from the backup. <code>list</code> <code>[\"Local add-ons\", \"homeassistant\", \"share\"]</code> <code>encrypted</code> Encrypt backups with the default encryption key found in backup settings (default: false) <code>bool</code> <code>true</code> <code>password</code> Optional custom password to encrypt the backup with. <code>string</code> <code>1234</code> <code>keep_days</code> The number of days to keep the backup. <code>float</code> <code>2</code> <code>location</code> Name of a backup network storage to put backup (or /backup) <code>string</code> <code>my_backup_mount</code> <code>download_path</code> Locations to download the backup to after creation. <code>list</code> <code>[\"/usb_drive\"]</code> <code>compressed</code> Use compressed archives (default: true) <code>bool</code> <code>true</code> Create a full backup <pre><code>service: auto_backup.backup\ndata:\n  name: \"Full Backup\"\n  keep_days: 2\n</code></pre> Create a partial backup Partial backup including just the config folder<pre><code>service: auto_backup.backup\ndata:\n  name: \"Partial Backup\"\n  include_folders:\n    - config\n  keep_days: 2\n</code></pre> Create an empty partial backup <pre><code>service: auto_backup.backup\ndata:\n  name: \"Partial Backup\"\n  include: {}\n  keep_days: 2\n</code></pre> Alternate include/exclude config <pre><code>service: auto_backup.backup\ndata:\n  name: \"Partial Backup\"\n  include:\n    addons: [...]\n    folders: [...]\n  exclude:\n    addons: [...]\n    folders: [...]\n  keep_days: 2\n</code></pre>"},{"location":"services/#addon-and-folder-names","title":"Addon and folder names","text":"<p>Addon names are case-insensitive and can be the addon name/title, these are the same names seen when creating a partial backup through the Supervisor backups page. They can also be the addons slug (slug must be lowercase). You can also use wildcards for matching slugs, such as <code>core_*</code> to include all core addons.</p> <p>Folder names are also case-insensitive and use the names seen when creating a partial backup through the Supervisor backups page. Currently, accepted values are (ignoring case):</p> <ul> <li><code>ssl</code></li> <li><code>share</code></li> <li><code>media</code></li> <li><code>addons</code> or <code>local add-ons</code> or <code>addons/local</code></li> <li><code>config</code> or <code>home assistant configuration</code> or <code>homeassistant</code></li> </ul>"},{"location":"services/#keep-days","title":"Keep Days","text":"<p>The <code>keep_days</code> parameter allows you to specify how long the backup should be kept for before being deleted. Default is forever. You can specify a float value for keep days, e.g. to keep a backup for 12 hours use <code>0.5</code>.</p>"},{"location":"services/#encryption","title":"Encryption","text":"<p>By default, all backups created by Auto Backup are unencrypted, if you want to create encrypted backups you can set the <code>encrypted</code> parameter to <code>true</code>. If you want to use a custom password for encryption you can set the <code>password</code> parameter to the desired password. If you do not specify a password, the default encryption key added in Home Assistant 2025.1 will be used. It can be found in Settings \u2192 System \u2192 Backups \u2192 Backup Settings \u2192 Configure Backup Settings \u2192 Encryption key.</p> <p>Do note that you have to go through Home Assistant's \"Set up backups\" flow to view the key, you likely do not want to use their automatic backups if you are using this integration so when it asks you to \"Set up automatic backups\" select \"Custom\", then disable \"Enable automatic backups\" and click \"Next\", if you have already set up automatic backups you can disable them on the backup settings page.</p>"},{"location":"services/#custom-locations","title":"Custom Locations","text":"<p>Home Assistant 2023.6 included support for adding custom backup locations, and even changing the default backup location. Auto Backup supports specifying an alternative location using the <code>location</code> option. Additional backup locations can be added by navigating to Settings \u2192 System \u2192 Storage, and clicking the Add network storage button.</p> <p></p>"},{"location":"services/#download-path","title":"Download Path","text":"<p>The <code>download_path</code> parameter allows you to specify a location or of list of locations to download the backup to after creation. This directory must be accessible from Home Assistant. If you are running in docker your paths will be relative to the container for example your Home Assistant configuration directory is stored under <code>/config</code> and the share folder is under <code>/share</code>.</p> <p>Tip</p> <p>The backup will still be stored under <code>/backup</code> and show up on the backups page, it will only be copied/downloaded to the location specified, to immediately delete the backup use a negative value for <code>keep_days</code> (e.g. <code>keep_days: -1</code> ).</p> <p>Info</p> <p>A slugified version of the backups name will be used for the filename, if a file with that name already exists the backups id (slug) will be used instead.</p> <p>Note</p> <p>When running on Home Assistant Core backups will be copied not downloaded. When running Home Assistant Supervised integrations do not have direct access to the <code>/backup</code> folder, which is why the backup is downloaded and not simply copied.</p>"},{"location":"services/#auto_backupbackup_full","title":"<code>auto_backup.backup_full</code>","text":"<p>Create a full backup with optional exclusions.</p> Parameter Description Type Example <code>name</code> Optional name, defaults to the current date and time. <code>string</code> <code>Automatic Backup {{ now().strftime('%Y-%m-%d') }}</code> <code>exclude</code> Addons/Folders to exclude from the backup. <code>Exclude Object</code> <code>{\"addons\": [\"MariaDB\"], \"folders\": [\"Local add-ons\", \"share\"]}</code> <code>encrypted</code> Encrypt backups with the default encryption key found in backup settings (default: false) <code>bool</code> <code>true</code> <code>password</code> Optional custom password to encrypt the backup with. <code>string</code> <code>1234</code> <code>keep_days</code> The number of days to keep the backup. <code>float</code> <code>2</code> <code>location</code> Name of a backup network storage to put backup (or /backup) <code>string</code> <code>my_backup_mount</code> <code>download_path</code> Locations to download the backup to after creation. <code>list</code> <code>[\"/usb_drive\"]</code> <code>compressed</code> Use compressed archives (default: true) <code>bool</code> <code>true</code>"},{"location":"services/#exclude-object","title":"Exclude Object","text":"Parameter Description Type Example <code>addons</code> List of addons to exclude from the backup (name or slug). <code>list</code> <code>[\"Almond\", \"glances\", \"core_mariadb\"]</code> <code>folders</code> List of folders to exclude from the backup. <code>list</code> <code>[\"Local add-ons\", \"homeassistant\", \"share\"]</code>"},{"location":"services/#auto_backupbackup_partial","title":"<code>auto_backup.backup_partial</code>","text":"<p>Create a partial backup.</p> Parameter Description Type Example <code>name</code> Optional name, defaults to the current date and time. <code>string</code> <code>Automatic Backup {{ now().strftime('%Y-%m-%d') }}</code> <code>addons</code> List of addons to backup (name or slug). <code>list</code> <code>[\"Almond\", \"glances\", \"core_mariadb\"]</code> <code>folders</code> List of folders to backup. <code>list</code> <code>[\"Local add-ons\", \"homeassistant\", \"share\"]</code> <code>encrypted</code> Encrypt backups with the default encryption key found in backup settings (default: false) <code>bool</code> <code>true</code> <code>password</code> Optional custom password to encrypt the backup with. <code>string</code> <code>1234</code> <code>keep_days</code> The number of days to keep the backup. <code>float</code> <code>2</code> <code>location</code> Name of a backup network storage to put backup (or /backup) <code>string</code> <code>my_backup_mount</code> <code>download_path</code> Locations to download the backup to after creation. <code>list</code> <code>[\"/usb_drive\"]</code> <code>compressed</code> Use compressed archives (default: true) <code>bool</code> <code>true</code>"},{"location":"services/#auto_backuppurge","title":"<code>auto_backup.purge</code>","text":"<p>Purge expired backups.</p> <p>There are no parameters here, just call the service, and it will remove any expired backups.</p> <p>This service is useful if you want to manually specify when to purge backups, such as doing a batch delete at 12AM.</p> <p>Info</p> <p>Expired backups are automatically purged when creating new backups, this can be disabled in the options menu.</p>"},{"location":"snippets/notify-on-backup-failure/","title":"Notify on backup failure","text":"Blueprint <p>Send notifications based on events created by the Auto Backup integration, such as when a backup fails.</p> <p></p> Notify on Backup Failure<pre><code>- alias: \"Notify Backup Failure\"\n  trigger:\n    platform: event\n    event_type: auto_backup.backup_failed # (1)\n  action:\n    service: persistent_notification.create # (2)\n    data:\n      title: \"Backup Failed.\"\n      message: |-\n        Name: {{ trigger.event.data.name }}\n        Error: {{ trigger.event.data.error }}\n</code></pre> <ol> <li>We listen for the <code>auto_backup.backup_failed</code> event.</li> <li>Create a persistent notification on failure with the backups name and the error.</li> </ol>"}]}